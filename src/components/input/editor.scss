.mu-editor {
  --mu-editor_height: var(--mu-input-size);
  --mu-editor_border-color: var(--mu-border-color);
  --mu-editor_border-radius: var(--mu-common-border-radius);

  position: relative;

  width: 200px;
  height: var(--mu-editor_height);

  font-size: var(--mu-common-font-size);
  line-height: var(--mu-common-line-height);

  border-radius: var(--mu-editor_border-radius);

  &[small] {
    --mu-editor_height: var(--mu-input-size-small);
  }

  &[round] {
    --mu-editor_border-radius: calc(var(--mu-editor_height) / 2);
  }
}

// Input Element
.mu-editor {
  @at-root {
    input#{&} {
      padding: 0 11px;
    }

    textarea#{&} {
      resize: none;
      padding: 5px 11px;
    }

    textarea#{&},
    input#{&},
    #{&} > input {
      line-height: var(--mu-common-line-height);
      color: var(--mu-text-color-body);
      outline: none;

      &::-ms-clear {
        display: none;
      }

      &::placeholder {
        color: var(--mu-text-color-placeholder);
      }
    }
  }
}

// Child Elements
.mu-editor {
  @at-root {
    div#{&} {
      display: inline-flex;
      align-items: center;
    }
  }

  & > * {
    overflow: hidden;
    flex: none;
    margin-left: var(--mu-base-spacing);
    border-radius: 0;
  }

  & > :first-child {
    margin-left: 11px;
    border-top-left-radius: var(--mu-editor_border-radius);
    border-bottom-left-radius: var(--mu-editor_border-radius);
  }

  & > :last-child {
    margin-right: 11px;
    border-top-right-radius: var(--mu-editor_border-radius);
    border-bottom-right-radius: var(--mu-editor_border-radius);
  }

  & > input {
    flex: 1 1 1px;

    width: 1px;
    height: 100%;
    padding: 0;

    font-size: 1em;

    background: transparent;
    border: 0;

    &:read-only {
      cursor: default;
    }
  }

  & > span {
    font-weight: 500;
    color: var(--mu-text-color-subtle);
  }

  & a {
    cursor: pointer;
    font-weight: 500;
    color: var(--mu-text-color-muted);
    text-decoration: none;

    &:hover {
      color: var(--mu-text-color-normal);
    }

    &[primary]:hover {
      color: var(--mu-primary-color-4);
    }

    &[danger]:hover {
      color: var(--mu-danger-color-4);
    }
  }

  & > [concealed] {
    width: 0;
    margin-left: 0;
    visibility: hidden;
  }

  &:hover > [concealed],
  &:focus-within > [concealed]  {
    width: auto;
    margin-left: var(--mu-base-spacing);
    visibility: visible;
  }
}

.mu-editor {
  & > label {
    display: flex;
    align-items: center;
    justify-content: center;
    
    height: 100%;
    padding: 0 11px;

    font-weight: 500;
    color: var(--mu-text-color-muted);
    text-overflow: ellipsis;
    white-space: nowrap;

    background-color: var(--mu-bg-strong);

    &:first-child,
    & + label {
      margin-left: 0;
    }

    & + label {
      padding-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }

    & > * {
      margin-left: var(--mu-base-spacing);
    }

    & > :first-child {
      margin-left: 0;
    }
  }

  &[input-style="solid"],
  &[input-style="underline"],
  &[readonly],
  &[disabled] {
    & > label {
      background-color: transparent;

      & + *,
      &:not(:first-child) {
        margin-left: 0;
      }
    }
  }
}

// Style & State
.mu-editor {
  color: var(--mu-text-color-normal);
  background-color: var(--mu-bg-normal);
  border: 1px solid var(--mu-editor_border-color);

  &[input-style="solid"] {
    --mu-editor_border-color: transparent;

    background-color: var(--mu-bg-strong);
  }

  &[input-style="underline"] {
    border-color: transparent;
    border-bottom-color: var(--mu-editor_border-color);
    border-radius: 0;
    box-shadow: none !important;

    & > * {
      border-radius: 0
    }
  }

  &[readonly] {
    background-color: var(--mu-bg-readonly);
  }

  &[disabled] {
    --mu-editor_border-color: var(--mu-border-color-muted);

    pointer-events: none;
    background-color: var(--mu-bg-disabled);
    box-shadow: none;

    & a {
      width: 0;
      margin-left: 0;
      visibility: hidden;
    }
    
    &,
    & > input {
      color: var(--mu-text-color-muted);
    }
  }

  &:focus-within {
    --mu-editor_border-color: var(--mu-primary-color);

    box-shadow: var(--mu-shadow-focus) rgb(from var(--mu-editor_border-color) r g b / 0.15);
  }

  &:hover {
    --mu-editor_border-color: var(--mu-primary-color-4);
  }

  @at-root {
    #{&}[invalid],
    [invalid] > #{&} {
      --mu-editor_border-color: var(--mu-danger-color);

      &:hover {
        --mu-editor_border-color: var(--mu-danger-color-4);
      }
    }
  }
}
