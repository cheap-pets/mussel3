.mu-edit {
  --mu-edit_height: var(--mu-input-size);
  --mu-edit_bg: var(--mu-bg-normal);
  --mu-edit_border-color: var(--mu-border-color);
  --mu-edit_border-radius: var(--mu-common-border-radius);
  --mu-edit_focus-shadow: var(--mu-shadow-focus) rgb(from var(--mu-edit_border-color) r g b / 0.15);
}

.mu-edit {
  width: 100%;
  height: var(--mu-edit_height);

  font-size: var(--mu-common-font-size);
  line-height: var(--mu-common-line-height);

  border-radius: var(--mu-edit_border-radius);

  &[small] {
    --mu-edit_height: var(--mu-input-size-small);
  }

  &[round] {
    --mu-edit_border-radius: calc(var(--mu-edit_height) / 2);
  }
}

// Input & Textarea
.mu-edit {
  @at-root {
    input#{&} {
      padding: 0 11px;
    }

    textarea#{&} {
      resize: none;
      padding: 5px 11px;
    }

    textarea#{&},
    input#{&},
    #{&} > input {
      line-height: var(--mu-common-line-height);
      color: var(--mu-text-color-body);
      outline: none;

      &::-ms-clear {
        display: none;
      }

      &::placeholder {
        color: var(--mu-text-color-placeholder);
      }
    }
  }
}

div.mu-edit {
  user-select: none;

  position: relative;

  overflow: hidden;
  display: flex;
  gap: var(--mu-base-spacing);
  align-items: center;

  padding: 0 11px;

  & > span, & > a {
    flex: none;
    color: var(--mu-text-color-muted);
  }

  & > span {
    pointer-events: none;
  }

  & > a {
    cursor: pointer;
    text-decoration: none;

    &:hover {
      color: var(--mu-text-color-soft);
    }
  }

  & > input {
    flex: 1 1 1px;

    width: 1px;
    height: 100%;
    padding: 0;

    font-size: 1em;

    background: none;
    border: 0;

    &:read-only {
      cursor: default;
    }
  }
}

.mu-edit-group {
  user-select: none;

  position: relative;

  display: flex;

  font-size: var(--mu-common-font-size);
  color: var(--mu-text-color-normal);

  & > * {
    display: flex;
    gap: var(--mu-base-spacing);
    align-items: center;

    height: var(--mu-input-size);
    margin-left: -1px;
    padding: 0 11px;

    border: 1px solid var(--mu-border-color);
    border-radius: 0 !important;
  }

  & > a, & > span, & > label, & > .mu-edit-addon {
    background: var(--mu-bg-translucent-gray);
  }

  & > .mu-icon,
  & > .mu-tool-button {
    justify-content: center;
    width: var(--mu-input-size);
    padding: 0;
    font-size: calc(1em + 2px);
  }
  
  & > .mu-edit {
    --mu-edit_height: var(--mu-input-size);

    z-index: 1;
    flex: 1 1 auto;
  }

  & > :focus-within {
    z-index: 2;
  }

  & > :first-child {
    margin-left: 0;
    border-top-left-radius: var(--mu-common-border-radius) !important;
    border-bottom-left-radius: var(--mu-common-border-radius) !important;
  }

  & > :last-child {
    border-top-right-radius: var(--mu-common-border-radius) !important;
    border-bottom-right-radius: var(--mu-common-border-radius) !important;
  }
}

.mu-edit {
  color: var(--mu-text-color-normal);
  background-color: var(--mu-edit_bg);
  border: 1px solid var(--mu-edit_border-color);

  &[readonly] {
    background-color: var(--mu-bg-readonly) !important;
  }

  &[invalid] {
    --mu-edit_border-color: var(--mu-danger-color);

    background-color: var(--mu-bg-danger) !important;
  }

  &[disabled] {
    --mu-edit_border-color: var(--mu-border-color-muted);

    pointer-events: none;
    background-color: var(--mu-bg-disabled) !important;
    box-shadow: none !important;

    & > a {
      display: none;
    }
    
    &,
    & > input {
      color: var(--mu-text-color-muted);
    }
  }

  &[input-style="solid"] {
    --mu-edit_bg: var(--mu-bg-translucent-gray);

    border-color: transparent;
  }

  &[input-style="underline"] {
    border-color: transparent transparent var(--mu-edit_border-color);
    border-radius: 0;
  }
}

.mu-edit-group > .mu-edit {
  --mu-edit_bg: var(--mu-bg-normal);
  --mu-edit_border-color: var(--mu-border-color);

  border-color: var(--mu-edit_border-color);

  &[invalid] {
    --mu-edit_border-color: var(--mu-danger-color);
  }
}

.mu-edit {
  &:hover, &:focus-within {
    border-color: var(--mu-edit_border-color);
    border-radius: var(--mu-edit_border-radius);
  }

  &:focus-within {
    --mu-edit_border-color: var(--mu-primary-color);

    box-shadow: var(--mu-edit_focus-shadow);
  }

  &:hover {
    --mu-edit_border-color: var(--mu-primary-color-4);
  }

  &[invalid] {
    &:focus-within {
      --mu-edit_border-color: var(--mu-danger-color);
    }

    &:hover {
      --mu-edit_border-color: var(--mu-danger-color-4);
    }
  }
}
